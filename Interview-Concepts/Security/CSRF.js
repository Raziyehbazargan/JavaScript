/*
CSRF is an attack whereby an attacker tricks a victim into performing actions on their behalf. 
The impact of the attack depends on the level of permissions that the victim has. 
Such attacks take advantage of the fact that a website completely trusts a user once it can confirm that the user is indeed who they say they are.
Cross-site Request Forgery (CSRF) vulnerabilities occur when a web server receives a malicious request from a trusted browser. 

An attacker can create a malicious link that lets them, for example, transfer money from a userâ€™s online bank account to another account. 
The attacker can use social engineering to make the user click this link. Because the user is already logged in, the server executes the action using their account.
The most effective method of protecting against CSRF is by using anti-CSRF tokens. 
The developer should add such tokens to all forms that allow users to perform any state-changing operations. When an operation is submitted, the web application 
should then check for the presence of the correct token. The other effective method is the use of the SameSite attribute for cookies, but not all browsers support this method yet.
*/

/*
Cross Site Request Forgery (CSRF)
Cross-site request forgery attacks (CSRF or XSRF for short) are used to send malicious requests from an authenticated user to a web application.
perform an operation in a web application on behalf of a user without their explicit consent
The attacker leads the user to perform an action, like visiting a web page, clicking a link, or similar.
This action sends an HTTP request to a website on behalf of the user.
If the user has an active authenticated session on the trusted website, the request is processed as a legitimate request sent by the user
A CSRF token is a unique, secret, unpredictable value that is generated by the server-side application and transmitted to the client in
 such a way that it is included in a subsequent HTTP request made by the client. When the later request is made, the server-side application 
 validates that the request includes the expected token and rejects the request if the token is missing or invalid.
CSRF tokens can prevent CSRF attacks by making it impossible for an attacker to construct a fully valid HTTP request suitable for feeding
 to a victim user. Since the attacker cannot determine or predict the value of a user's CSRF token, they cannot construct a request with 
 all the parameters that are necessary for the application to honor the request.

*/